name: JSROOT CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]
        cxx: [g++-11, g++-12, g++-13]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Set up C++ compiler (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.cxx }}
          sudo apt-get install -y xutils-dev libxi-dev libxxf86vm-dev x11proto-xf86vidmode-dev mesa-utils xvfb libgl1-mesa-dri libglapi-mesa libosmesa6 musl-dev libgl1-mesa-dev
          sudo apt-get install -y build-essential libxi-dev libglu1-mesa-dev libglew-dev pkg-config
          echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          npm ci

      - name: Run eslint
        run: |
          npm run check

      - name: Build jsroot.js
        run: |
          npm run build

      - name: Run demos
        run: |
          cd demo/node; npm install; cd ../..
          xvfb-run -s "-ac -screen 0 1280x1024x24" node demo/node/makesvg.js
          node demo/node/tree_dump.js
          node demo/node/tree_draw.js
          xvfb-run -s "-ac -screen 0 1280x1024x24" node demo/node/geomsvg.js
          node demo/node/selector.js
          cd demo/node; xvfb-run -s "-ac -screen 0 1280x1024x24" node make_image.js
  tests_ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout jsroot-test repo
        uses: actions/checkout@v4
        with:
          repository: 'linev/jsroot-test'
          path: 'jsroot-test'

      - name: Clone JSROOT Repository
        run: git clone https://github.com/root-project/jsroot.git

      - name: Install System Dependencies for headless-gl
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libxi-dev libglu1-mesa-dev libglew-dev xvfb

      - name: Setup Xvfb
        run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Dependencies jsroot
        run: |
          cd jsroot
          npm install

      - name: Dependencies jsroot-test
        run: |
          cd jsroot-test
          npm install


      #all the individual tests for each example. It is also possible to do it in one test
      - name: Run test in jsroot-test for Candle
        run: |
          cd jsroot-test
          node test.js --key Candle

      - name: Run test in jsroot-test for Misc
        run: |
          cd jsroot-test
          node test.js --key Misc

      - name: Run test in jsroot-test for RCanvas
        run: |
          cd jsroot-test
          node test.js --key RCanvas

      - name: Run test in jsroot-test for TASImage
        run: |
          cd jsroot-test
          node test.js --key TASImage

      - name: Run test in jsroot-test for TCanvas #
        run: |
          cd jsroot-test
          node test.js --key TCanvas

      - name: Run test in jsroot-test for TEfficiency
        run: |
          cd jsroot-test
          node test.js --key TEfficiency

      - name: Run test in jsroot-test for TF1
        run: |
          cd jsroot-test
          node test.js --key TF1

      - name: Run test in jsroot-test for TF2
        run: |
          cd jsroot-test
          node test.js --key TF2

      - name: Run test in jsroot-test for TF3
        run: |
          cd jsroot-test
          node test.js --TF3

      - name: Run test in jsroot-test for TGeo #
        run: |
          cd jsroot-test
          node test.js --key TGeo

      - name: Run test in jsroot-test for TGraph
        run: |
          cd jsroot-test
          node test.js --key TGraph

      - name: Run test in jsroot-test for TGraph2D #
        run: |
          cd jsroot-test
          node test.js --key TGraph2D

      - name: Run test in jsroot-test for TGraphAsymmErrors
        run: |
          cd jsroot-test
          node test.js --key TGraphAsymmErrors

      - name: Run test in jsroot-test for TGraphErrors
        run: |
          cd jsroot-test
          node test.js --key TGraphErrors

      - name: Run test in jsroot-test for TGraphMultiErrors
        run: |
          cd jsroot-test
          node test.js --key TGraphMultiErrors

      - name: Run test in jsroot-test for TGraphPolar
        run: |
          cd jsroot-test
          node test.js --key TGraphPolar

      - name: Run test in jsroot-test for TH1
        run: |
          cd jsroot-test
          node test.js --key TH1

      - name: Run test in jsroot-test for TH2 #
        run: |
          cd jsroot-test
          node test.js --key TH2

      - name: Run test in jsroot-test for TH2Poly #
        run: |
          cd jsroot-test
          node test.js --key TH2Poly

      - name: Run test in jsroot-test for TH3 #
        run: |
          cd jsroot-test
          node test.js --key TH3

      - name: Run test in jsroot-test for THStack #
        run: |
          cd jsroot-test
          node test.js --key THStack

      - name: Run test in jsroot-test for TLatex
        run: |
          cd jsroot-test
          node test.js --key TLatex

      - name: Run test in jsroot-test for TMultiGraph
        run: |
          cd jsroot-test
          node test.js --key TMultiGraph

      - name: Run test in jsroot-test for TProfile
        run: |
          cd jsroot-test
          node test.js --key TProfile

      - name: Run test in jsroot-test for TRatioPlot
        run: |
          cd jsroot-test
          node test.js --key TRatioPlot

      - name: Run test in jsroot-test for TTree
        run: |
          cd jsroot-test
          node test.js --key TTree

      - name: Run test in jsroot-test for TWebCanvas
        run: |
          cd jsroot-test
          node test.js --key TWebCanvas

  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        
      - name: Configure xcode usage
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
        
      - name: Set up C++ compiler (macOS)
        run: |
          echo "CXX=clang++" >> $GITHUB_ENV
        
      - name: Install dependencies
        run: |
          python3 -m pip install setuptools
          npm ci
        
      - name: Run eslint
        run: |
          npm run check
        
      - name: Build jsroot.js
        run: |
          npm run build
        
      - name: Run demos
        run: |
          cd demo/node; npm install; cd ../..
          node demo/node/makesvg.js
          node demo/node/tree_dump.js
          node demo/node/tree_draw.js
          node demo/node/selector.js
          cd demo/node; node make_image.js

  tests_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout jsroot-test repo
        uses: actions/checkout@v4
        with:
          repository: 'linev/jsroot-test'
          path: 'jsroot-test'

      - name: Clone JSROOT Repository
        run: git clone https://github.com/root-project/jsroot.git

      - name: Install Node Dependencies for jsroot
        run: |
          cd jsroot
          npm install
        
      - name: Install Node Dependencies for jsroot-test
        run: |
          cd jsroot-test
          npm install     

      - name: Run all tests
        run: |
          cd jsroot-test
          node test.js --verify
  
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        
      - name: Set up C++ compiler (Windows)
        run: |
          echo "CXX=cl" >> $GITHUB_ENV
        
      - name: Install dependencies
        run: |
          npm ci
        
      - name: Run eslint
        run: |
          npm run check
        
      - name: Build jsroot.js
        run: |
          npm run build
        
      - name: Run demos
        run: |
          cd demo/node; npm install; cd ../..
          node demo/node/makesvg.js
          node demo/node/tree_dump.js
          node demo/node/tree_draw.js
          node demo/node/geomsvg.js
          node demo/node/selector.js
          cd demo/node; node make_image.js
  tests_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout jsroot-test repo
        uses: actions/checkout@v4
        with:
          repository: 'linev/jsroot-test'
          path: 'jsroot-test'

      - name: Clone JSROOT Repository
        run: git clone https://github.com/root-project/jsroot.git
      
      - name: Install Node Dependencies for jsroot
        run: |
          cd jsroot
          npm install
      
      - name: Install Node Dependencies for jsroot-test
        run: |
          cd jsroot-test
          npm install
      
      - name: Run all tests
        run: |
          cd jsroot-test
          node test.js --verify

